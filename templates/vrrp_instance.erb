vrrp_instance <%= @name %> {
  interface                 <%= @interface %>
  state                     <%= @state %>
  virtual_router_id         <%= @virtual_router_id %>
  priority                  <%= @priority %>
  <%- if @lvs_interface -%>
  lvs_sync_daemon_interface <%= @lvs_interface %>
  <%- end -%>
  <%- if @smtp_alert -%>
  smtp_alert
  <%- end -%>

  <%- if @nopreempt -%>
  nopreempt
  <%- end -%>


  # notify scripts and alerts are optional
  #
  # filenames of scripts to run on transitions
  # can be unquoted (if just filename)
  # or quoted (if has parameters)
  <%- if @notify_script_master -%>
  # to MASTER transition
  notify_master <%= @notify_script_master %>
  <%- end -%>
  <%- if @notify_script_backup -%>
  # to BACKUP transition
  notify_backup <%= @notify_script_backup %>
  <%- end -%>
  <%- if @notify_script_fault -%>
  # FAULT transition
  notify_fault <%= @notify_script_fault %>
  <%- end -%>

  <%- if @notify_script -%>
  # for ANY state transition.
  # "notify" script is called AFTER the
  # notify_* script(s) and is executed
  # with 3 arguments provided by keepalived
  # (ie don't include parameters in the notify line).
  # arguments
  # $1 = "GROUP"|"INSTANCE"
  # $2 = name of group or instance
  # $3 = target state of transition
  #     ("MASTER"|"BACKUP"|"FAULT")
  notify <%= @notify_script %>
  <%- end -%>

  <%- if @auth_type -%>

  authentication {
    auth_type <%= @auth_type %>
    auth_pass <%= @auth_pass %>
  }
  <%- end -%>
  <%- if @notify_script -%>

  notify                    <%= @notify_script %>
  <%- end -%>
  <%- if @track_script -%>

  track_script {
    <% @track_script.each do |track| %><%= track %>
    <%- end -%>
  }
  <%- end -%>

  <%- if @track_interface -%>
  track_interface {
  <%- [@track_interface].flatten.each do |interface| -%>
    <%= interface %> 
  <%- end -%>
  }
  <%- end -%>

  virtual_ipaddress {
  <%- if @virtual_ipaddress.class == Hash -%>
    <%- vips = [ @virtual_ipaddress ] -%>
  <%- else -%>
    <%- vips = @virtual_ipaddress -%>
  <%- end -%>
  <%- vips.each do |ip| -%>
    <%- if ip.class == Hash -%>
      <%- device = ip['dev'] || @virtual_ipaddress_int || @interface -%>
      <%- attrs = Hash[ ip.select { |k,v| ['label', 'brd', 'scope'].include? k } ] -%>
    <%= ip['ip'] %> dev <%= device %> <%= attrs.sort_by{ |k,v| k }.entries.join ' ' %>
    <%- else -%>
    <%= ip %> dev <%= @virtual_ipaddress_int || @interface %>
    <%- end -%>
  <%- end -%>
  }

  <%- if @virtual_ipaddress_excluded -%>
  virtual_ipaddress_excluded {
  <%- if @virtual_ipaddress_excluded.class == Hash -%>
    <%- vips = [ @virtual_ipaddress_excluded ] -%>
  <%- else -%>
    <%- vips = @virtual_ipaddress_excluded -%>
  <%- end -%>
  <%- vips.each do |ip| -%>
    <%- if ip.class == Hash -%>
      <%- device = ip['dev'] || @virtual_ipaddress_int || @interface -%>
      <%- attrs = Hash[ ip.select { |k,v| ['label', 'brd', 'scope'].include? k } ] -%>
      <%= ip['ip'] %> dev <%= device %> <%= attrs.sort_by{ |k,v| k }.entries.join ' ' %>

    <%- else -%>
      <%= ip %> dev <%= @virtual_ipaddress_int || @interface %>
    <%- end -%>
  <%- end -%>
  }
  <%- end -%>
}
